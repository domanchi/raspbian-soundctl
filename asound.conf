# NOTE: The system does not need to be "restarted" for changes to this file
#       to apply. Simply quit any program using it, and load it again, so that
#       it will use the latest version.
#
#       For `alsamixer`, loading the program first will kick it to make it
#       have the latest version.
#
# NOTE: To clean alsamixer's outdated controls, you can do the following:
#       rm /var/lib/alsa/asound.state
#       chmod -x /usr/sbin/alsactl
#       <REBOOT>
#       chmod +x /usr/sbin/alsactl
# Source: https://bbs.archlinux.org/viewtopic.php?pid=1257418#p1257418
#
# For plugins, read this link **very** carefully:
# http://www.alsa-project.org/alsa-doc/alsa-lib/pcm_plugins.html

pcm.!default {
    type asym
    playback.pcm "homespeakers"
    capture.pcm "micboost"
}

# I have no idea what this does, but it's what Google uses for their
# pre-setup.
# https://github.com/google/aiyprojects-raspbian/blob/aiyprojects/scripts/asound.conf
pcm.micboost {
    type route
    slave.pcm dsnoop
    ttable {
        0.0 30.0
        1.1 30.0
    }
}

pcm.homespeakers {
    # Though ALSA comes with in-built volume control, we want to boost
    # the max volume with an amplifier.
    type softvol

    # This represents `hw:0,0`, because the HDMI output is `hw:0,1`.
    slave.pcm "hw:0,0"

    # The amplifier's settings, controlled through alsamixer.
    control.name "AUX Amp"
    control.card 0
    control.index 0

    max_dB 5.0

    # The number of segments you want + 1.
    # Interestingly though, it seems that you can't arbitrarily choose this
    # number: this was chosen by trial and error.
    resolution 11;

    hint {
        show on
        description "Sound through the AUX cable"
    }
}

pcm.googlespeaker {
    # softvol == Software Defined Volume Control
    type softvol
    slave.pcm "hw:1,0"

    control.name "Google Amp"
    control.card 1
    control.index 0

    hint {
        show on
        description "Speakers attached to the box itself"
    }
}

